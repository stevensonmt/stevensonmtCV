var _user$project$MyCV$update = F2(
	function (model, msg) {
		return model;
	});
var _user$project$MyCV$initialModel = {
	name: 'Matthew Stevenson, MD',
	education: {
		ctor: '::',
		_0: {description: 'Doctor of Medicine', location: 'University of Texas Southwestern Medical Center, Dallas, TX', dates: '2003 - 2007'},
		_1: {
			ctor: '::',
			_0: {description: 'Post Baccalaureate Studies', location: 'University of Texas at Austin, Austin, TX', dates: '2000 - 2001'},
			_1: {
				ctor: '::',
				_0: {description: 'B.A. English', location: 'Baylor University, Waco, TX', dates: '1995 - 1999'},
				_1: {ctor: '[]'}
			}
		}
	},
	training: {
		ctor: '::',
		_0: {title: 'Fellowship in Clinical Neurophysiology -- EEG Track', location: 'University of Michigan, Ann Arbor, MI', dates: '2011 - 2012', description: 'Subspecialty training in EEG interpretation and epilepsy management'},
		_1: {
			ctor: '::',
			_0: {title: 'Neurology Residency', location: 'University of Texas Southwestern Medical Center, Dallas, TX', dates: '2007 - 2011', description: 'Rigorous training in general neurology with broad exposure to all subspecialty fields. Included year of Internal Medicine internship.'},
			_1: {ctor: '[]'}
		}
	},
	experience: {
		ctor: '::',
		_0: {position: 'General neurology with a focus on epilepsy management and EEG interpretation', location: 'Multicare Health Systems, Puyallup, WA', dates: '2016 - present', description: 'Joined established neurology division within multispecialty integrated healthcare system to provide EEG interpretation and epilepsy expertise for eastern Pierce County. Continued general neurology practice with roughly 40-50% epilepsy focus.'},
		_1: {
			ctor: '::',
			_0: {position: 'General neurology', location: 'Clinical Neuroscience, Fort Worth, TX', dates: '2012 - 2016', description: 'Joined established small single-specialty group to provide general neurology care. Spearheaded adoption of EHR, including research of software and hardware options.'},
			_1: {ctor: '[]'}
		}
	},
	publications: {
		ctor: '::',
		_0: {authors: 'Victoria S.S. Wong, Matthew Stevenson, and Linda Selwa', title: 'The presentation of seizures and epilepsy in YouTube videos', citation: 'Epilepsy and Behavior vol. 27:1 (247-250).'},
		_1: {
			ctor: '::',
			_0: {authors: 'Amer M. Awad and Mathew Stevenson', title: 'Isolated Central Nervous System Vasculitis Associated with Antiribonuclear Protein Antibody', citation: 'Case Reports in Neurological Medicine, vol. 2011, Article ID 495201, 4 pages, 2011. doi:10.1155/2011/495201.'},
			_1: {
				ctor: '::',
				_0: {title: 'Myopathy with Ataxia: case report of nemaline myopathy associated with a cerebellar ataxia syndrome', authors: '', citation: 'February 2010 Carrell-Krusen Neuromuscular Symposium Dallas, TX'},
				_1: {ctor: '[]'}
			}
		}
	},
	interests: {
		ctor: '::',
		_0: 'Coding in Ruby, Crystal, Elm, HTML, and CSS',
		_1: {
			ctor: '::',
			_0: 'Science fiction and English literature',
			_1: {
				ctor: '::',
				_0: 'Laughter of my wife and children',
				_1: {ctor: '[]'}
			}
		}
	},
	certifications: {
		ctor: '::',
		_0: 'ABPN Neurology Certificate: 57880',
		_1: {
			ctor: '::',
			_0: 'WA license: MD60583782',
			_1: {
				ctor: '::',
				_0: 'TX license: P2374',
				_1: {
					ctor: '::',
					_0: 'DEA: ',
					_1: {
						ctor: '::',
						_0: 'BLS Provider exp 11/19',
						_1: {ctor: '[]'}
					}
				}
			}
		}
	}
};
var _user$project$MyCV$colorpalette = function (mycolor) {
	var _p0 = mycolor;
	switch (_p0.ctor) {
		case 'DarkPrimary':
			return A3(_elm_lang$core$Color$rgb, 69, 90, 100);
		case 'Primary':
			return A3(_elm_lang$core$Color$rgb, 96, 125, 139);
		case 'LightPrimary':
			return A3(_elm_lang$core$Color$rgb, 207, 216, 220);
		case 'DarkSecondary':
			return A3(_elm_lang$core$Color$rgb, 123, 31, 162);
		case 'Secondary':
			return A3(_elm_lang$core$Color$rgb, 156, 39, 176);
		case 'LightSecondary':
			return A3(_elm_lang$core$Color$rgb, 225, 190, 231);
		case 'PrimaryText':
			return A3(_elm_lang$core$Color$rgb, 53, 45, 42);
		case 'SecondaryText':
			return A3(_elm_lang$core$Color$rgb, 189, 189, 189);
		case 'White':
			return A3(_elm_lang$core$Color$rgb, 255, 255, 255);
		default:
			return A3(_elm_lang$core$Color$rgb, 0, 0, 0);
	}
};
var _user$project$MyCV$fontStack = function (font) {
	var _p1 = font;
	switch (_p1.ctor) {
		case 'Headline':
			return _mdgriffith$style_elements$Style_Font$importUrl(
				{url: 'https://fonts.googleapis.com/css?family=Dosis', name: 'dosis'});
		case 'PrimarySans':
			return _mdgriffith$style_elements$Style_Font$importUrl(
				{url: 'https://fonts.googleapis.com/css?family=Roboto', name: 'roboto'});
		case 'SecondarySans':
			return _mdgriffith$style_elements$Style_Font$sansSerif;
		case 'PrimarySerif':
			return _mdgriffith$style_elements$Style_Font$importUrl(
				{url: 'https://fonts.googleapis.com/css?family=Esteban', name: 'esteban'});
		case 'SecondarySerif':
			return _mdgriffith$style_elements$Style_Font$serif;
		default:
			return _mdgriffith$style_elements$Style_Font$sansSerif;
	}
};
var _user$project$MyCV$Model = F7(
	function (a, b, c, d, e, f, g) {
		return {name: a, education: b, training: c, experience: d, publications: e, interests: f, certifications: g};
	});
var _user$project$MyCV$Education = F3(
	function (a, b, c) {
		return {description: a, location: b, dates: c};
	});
var _user$project$MyCV$Training = F4(
	function (a, b, c, d) {
		return {title: a, location: b, dates: c, description: d};
	});
var _user$project$MyCV$Experience = F4(
	function (a, b, c, d) {
		return {position: a, location: b, dates: c, description: d};
	});
var _user$project$MyCV$Publications = F3(
	function (a, b, c) {
		return {title: a, authors: b, citation: c};
	});
var _user$project$MyCV$CVCerts = {ctor: 'CVCerts'};
var _user$project$MyCV$CVInterests = {ctor: 'CVInterests'};
var _user$project$MyCV$CVPublications = {ctor: 'CVPublications'};
var _user$project$MyCV$CVTraining = {ctor: 'CVTraining'};
var _user$project$MyCV$CVEducation = {ctor: 'CVEducation'};
var _user$project$MyCV$CVExperience = {ctor: 'CVExperience'};
var _user$project$MyCV$Background = {ctor: 'Background'};
var _user$project$MyCV$None = {ctor: 'None'};
var _user$project$MyCV$CardText = {ctor: 'CardText'};
var _user$project$MyCV$CardSubheader = {ctor: 'CardSubheader'};
var _user$project$MyCV$cvCardBody = F2(
	function (category, model) {
		var _p2 = category;
		switch (_p2.ctor) {
			case 'CVEducation':
				return A2(
					_elm_lang$core$List$map,
					function (education) {
						return {
							ctor: '::',
							_0: A3(
								_mdgriffith$style_elements$Element$paragraph,
								_user$project$MyCV$None,
								{
									ctor: '::',
									_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(5),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$el,
										_user$project$MyCV$CardSubheader,
										{ctor: '[]'},
										_mdgriffith$style_elements$Element$text(education.description)),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A3(
									_mdgriffith$style_elements$Element$paragraph,
									_user$project$MyCV$None,
									{
										ctor: '::',
										_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(5),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A3(
											_mdgriffith$style_elements$Element$el,
											_user$project$MyCV$CardText,
											{ctor: '[]'},
											_mdgriffith$style_elements$Element$text(education.location)),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$paragraph,
										_user$project$MyCV$None,
										{
											ctor: '::',
											_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(20),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A3(
												_mdgriffith$style_elements$Element$el,
												_user$project$MyCV$CardText,
												{ctor: '[]'},
												_mdgriffith$style_elements$Element$text(education.dates)),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}
						};
					},
					model.education);
			case 'CVTraining':
				return A2(
					_elm_lang$core$List$map,
					function (training) {
						return {
							ctor: '::',
							_0: A3(
								_mdgriffith$style_elements$Element$paragraph,
								_user$project$MyCV$None,
								{
									ctor: '::',
									_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(5),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$el,
										_user$project$MyCV$CardSubheader,
										{ctor: '[]'},
										_mdgriffith$style_elements$Element$text(training.title)),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A3(
									_mdgriffith$style_elements$Element$paragraph,
									_user$project$MyCV$None,
									{
										ctor: '::',
										_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(5),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A3(
											_mdgriffith$style_elements$Element$el,
											_user$project$MyCV$CardText,
											{ctor: '[]'},
											_mdgriffith$style_elements$Element$text(training.location)),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$paragraph,
										_user$project$MyCV$None,
										{
											ctor: '::',
											_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(5),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A3(
												_mdgriffith$style_elements$Element$el,
												_user$project$MyCV$CardText,
												{ctor: '[]'},
												_mdgriffith$style_elements$Element$text(training.dates)),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A3(
											_mdgriffith$style_elements$Element$paragraph,
											_user$project$MyCV$None,
											{
												ctor: '::',
												_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(20),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A3(
													_mdgriffith$style_elements$Element$el,
													_user$project$MyCV$CardText,
													{ctor: '[]'},
													_mdgriffith$style_elements$Element$text(training.description)),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}
							}
						};
					},
					model.training);
			case 'CVExperience':
				return A2(
					_elm_lang$core$List$map,
					function (experience) {
						return {
							ctor: '::',
							_0: A3(
								_mdgriffith$style_elements$Element$paragraph,
								_user$project$MyCV$None,
								{
									ctor: '::',
									_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(3),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$el,
										_user$project$MyCV$CardSubheader,
										{ctor: '[]'},
										_mdgriffith$style_elements$Element$text(experience.position)),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A3(
									_mdgriffith$style_elements$Element$paragraph,
									_user$project$MyCV$None,
									{
										ctor: '::',
										_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(3),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A3(
											_mdgriffith$style_elements$Element$el,
											_user$project$MyCV$CardText,
											{ctor: '[]'},
											_mdgriffith$style_elements$Element$text(experience.location)),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$paragraph,
										_user$project$MyCV$None,
										{
											ctor: '::',
											_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(3),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A3(
												_mdgriffith$style_elements$Element$el,
												_user$project$MyCV$CardText,
												{ctor: '[]'},
												_mdgriffith$style_elements$Element$text(experience.dates)),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A3(
											_mdgriffith$style_elements$Element$paragraph,
											_user$project$MyCV$None,
											{
												ctor: '::',
												_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(20),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A3(
													_mdgriffith$style_elements$Element$el,
													_user$project$MyCV$CardText,
													{ctor: '[]'},
													_mdgriffith$style_elements$Element$text(experience.description)),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}
							}
						};
					},
					model.experience);
			case 'CVPublications':
				return A2(
					_elm_lang$core$List$map,
					function (publications) {
						return {
							ctor: '::',
							_0: A3(
								_mdgriffith$style_elements$Element$paragraph,
								_user$project$MyCV$None,
								{
									ctor: '::',
									_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(3),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$el,
										_user$project$MyCV$CardSubheader,
										{ctor: '[]'},
										_mdgriffith$style_elements$Element$text(publications.title)),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A3(
									_mdgriffith$style_elements$Element$paragraph,
									_user$project$MyCV$None,
									{
										ctor: '::',
										_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(3),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A3(
											_mdgriffith$style_elements$Element$el,
											_user$project$MyCV$CardText,
											{ctor: '[]'},
											_mdgriffith$style_elements$Element$text(publications.authors)),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$paragraph,
										_user$project$MyCV$None,
										{
											ctor: '::',
											_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(10),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A3(
												_mdgriffith$style_elements$Element$el,
												_user$project$MyCV$CardText,
												{ctor: '[]'},
												_mdgriffith$style_elements$Element$text(publications.citation)),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}
						};
					},
					model.publications);
			case 'CVInterests':
				return A2(
					_elm_lang$core$List$map,
					function (interests) {
						return {
							ctor: '::',
							_0: A3(
								_mdgriffith$style_elements$Element$paragraph,
								_user$project$MyCV$None,
								{
									ctor: '::',
									_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(4),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$el,
										_user$project$MyCV$CardText,
										{ctor: '[]'},
										_mdgriffith$style_elements$Element$text(interests)),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						};
					},
					model.interests);
			default:
				return A2(
					_elm_lang$core$List$map,
					function (certifications) {
						return {
							ctor: '::',
							_0: A3(
								_mdgriffith$style_elements$Element$paragraph,
								_user$project$MyCV$None,
								{
									ctor: '::',
									_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(2),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$el,
										_user$project$MyCV$CardText,
										{ctor: '[]'},
										_mdgriffith$style_elements$Element$text(certifications)),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						};
					},
					model.certifications);
		}
	});
var _user$project$MyCV$mapFunct = F3(
	function (category, model, cardcategory) {
		return _user$project$MyCV$cvCardBody(category);
	});
var _user$project$MyCV$viewEducation = function (education) {
	return A3(
		_elm_lang$core$List$foldr,
		F2(
			function (x, y) {
				return A2(_elm_lang$core$Basics_ops['++'], x, y);
			}),
		{ctor: '[]'},
		A2(
			_elm_lang$core$List$map,
			function (education) {
				return {
					ctor: '::',
					_0: A3(
						_mdgriffith$style_elements$Element$paragraph,
						_user$project$MyCV$None,
						{
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(5),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A3(
								_mdgriffith$style_elements$Element$el,
								_user$project$MyCV$CardSubheader,
								{ctor: '[]'},
								_mdgriffith$style_elements$Element$text(education.description)),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A3(
							_mdgriffith$style_elements$Element$paragraph,
							_user$project$MyCV$None,
							{
								ctor: '::',
								_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(5),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A3(
									_mdgriffith$style_elements$Element$el,
									_user$project$MyCV$CardText,
									{ctor: '[]'},
									_mdgriffith$style_elements$Element$text(education.location)),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A3(
								_mdgriffith$style_elements$Element$paragraph,
								_user$project$MyCV$None,
								{
									ctor: '::',
									_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(20),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$el,
										_user$project$MyCV$CardText,
										{ctor: '[]'},
										_mdgriffith$style_elements$Element$text(education.dates)),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				};
			},
			education));
};
var _user$project$MyCV$CardHeader = {ctor: 'CardHeader'};
var _user$project$MyCV$Card = {ctor: 'Card'};
var _user$project$MyCV$cvCard = F3(
	function (header, category, model) {
		return A3(
			_mdgriffith$style_elements$Element$column,
			_user$project$MyCV$Card,
			{
				ctor: '::',
				_0: _mdgriffith$style_elements$Element_Attributes$spacing(10),
				_1: {
					ctor: '::',
					_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$alignLeft,
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$width(_mdgriffith$style_elements$Element_Attributes$fill),
							_1: {
								ctor: '::',
								_0: _mdgriffith$style_elements$Element_Attributes$minWidth(
									_mdgriffith$style_elements$Element_Attributes$px(400)),
								_1: {
									ctor: '::',
									_0: _mdgriffith$style_elements$Element_Attributes$height(_mdgriffith$style_elements$Element_Attributes$fill),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			},
			{
				ctor: '::',
				_0: A3(
					_mdgriffith$style_elements$Element$paragraph,
					_user$project$MyCV$CardHeader,
					{
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$spacing(10),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
							_1: {
								ctor: '::',
								_0: _mdgriffith$style_elements$Element_Attributes$width(
									_mdgriffith$style_elements$Element_Attributes$percent(100)),
								_1: {ctor: '[]'}
							}
						}
					},
					{
						ctor: '::',
						_0: A3(
							_mdgriffith$style_elements$Element$el,
							_user$project$MyCV$None,
							{
								ctor: '::',
								_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
								_1: {ctor: '[]'}
							},
							_mdgriffith$style_elements$Element$text(header)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A3(
						_mdgriffith$style_elements$Element$column,
						_user$project$MyCV$None,
						{
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$width(
								_mdgriffith$style_elements$Element_Attributes$percent(100)),
							_1: {
								ctor: '::',
								_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
								_1: {ctor: '[]'}
							}
						},
						A3(
							_elm_lang$core$List$foldr,
							F2(
								function (x, y) {
									return A2(_elm_lang$core$Basics_ops['++'], x, y);
								}),
							{ctor: '[]'},
							A2(_user$project$MyCV$cvCardBody, category, model))),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$MyCV$viewTraining = function (training) {
	return A3(
		_mdgriffith$style_elements$Element$column,
		_user$project$MyCV$Card,
		{
			ctor: '::',
			_0: _mdgriffith$style_elements$Element_Attributes$spacing(10),
			_1: {
				ctor: '::',
				_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
				_1: {
					ctor: '::',
					_0: _mdgriffith$style_elements$Element_Attributes$alignLeft,
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$width(_mdgriffith$style_elements$Element_Attributes$fill),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$height(_mdgriffith$style_elements$Element_Attributes$fill),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		},
		{
			ctor: '::',
			_0: A3(
				_mdgriffith$style_elements$Element$paragraph,
				_user$project$MyCV$CardHeader,
				{
					ctor: '::',
					_0: _mdgriffith$style_elements$Element_Attributes$spacing(10),
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$width(
								_mdgriffith$style_elements$Element_Attributes$percent(100)),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: A3(
						_mdgriffith$style_elements$Element$el,
						_user$project$MyCV$None,
						{
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
							_1: {ctor: '[]'}
						},
						_mdgriffith$style_elements$Element$text('Training')),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A3(
					_mdgriffith$style_elements$Element$column,
					_user$project$MyCV$None,
					{
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$width(
							_mdgriffith$style_elements$Element_Attributes$percent(100)),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
							_1: {ctor: '[]'}
						}
					},
					A3(
						_elm_lang$core$List$foldr,
						F2(
							function (x, y) {
								return A2(_elm_lang$core$Basics_ops['++'], x, y);
							}),
						{ctor: '[]'},
						A2(
							_elm_lang$core$List$map,
							function (training) {
								return {
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$paragraph,
										_user$project$MyCV$None,
										{
											ctor: '::',
											_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(5),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A3(
												_mdgriffith$style_elements$Element$el,
												_user$project$MyCV$CardSubheader,
												{ctor: '[]'},
												_mdgriffith$style_elements$Element$text(training.title)),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A3(
											_mdgriffith$style_elements$Element$paragraph,
											_user$project$MyCV$None,
											{
												ctor: '::',
												_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(5),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A3(
													_mdgriffith$style_elements$Element$el,
													_user$project$MyCV$CardText,
													{ctor: '[]'},
													_mdgriffith$style_elements$Element$text(training.location)),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A3(
												_mdgriffith$style_elements$Element$paragraph,
												_user$project$MyCV$None,
												{
													ctor: '::',
													_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(5),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A3(
														_mdgriffith$style_elements$Element$el,
														_user$project$MyCV$CardText,
														{ctor: '[]'},
														_mdgriffith$style_elements$Element$text(training.dates)),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A3(
													_mdgriffith$style_elements$Element$paragraph,
													_user$project$MyCV$None,
													{
														ctor: '::',
														_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(20),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A3(
															_mdgriffith$style_elements$Element$el,
															_user$project$MyCV$CardText,
															{ctor: '[]'},
															_mdgriffith$style_elements$Element$text(training.description)),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}
									}
								};
							},
							training))),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$MyCV$viewExperience = function (experience) {
	return A3(
		_mdgriffith$style_elements$Element$column,
		_user$project$MyCV$Card,
		{
			ctor: '::',
			_0: _mdgriffith$style_elements$Element_Attributes$spacing(10),
			_1: {
				ctor: '::',
				_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
				_1: {
					ctor: '::',
					_0: _mdgriffith$style_elements$Element_Attributes$alignLeft,
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$width(_mdgriffith$style_elements$Element_Attributes$fill),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$height(_mdgriffith$style_elements$Element_Attributes$fill),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		},
		{
			ctor: '::',
			_0: A3(
				_mdgriffith$style_elements$Element$paragraph,
				_user$project$MyCV$CardHeader,
				{
					ctor: '::',
					_0: _mdgriffith$style_elements$Element_Attributes$spacing(10),
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$width(
								_mdgriffith$style_elements$Element_Attributes$percent(100)),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: A3(
						_mdgriffith$style_elements$Element$el,
						_user$project$MyCV$None,
						{ctor: '[]'},
						_mdgriffith$style_elements$Element$text('Experience')),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A3(
					_mdgriffith$style_elements$Element$column,
					_user$project$MyCV$None,
					{
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$width(
							_mdgriffith$style_elements$Element_Attributes$percent(100)),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
							_1: {ctor: '[]'}
						}
					},
					A3(
						_elm_lang$core$List$foldr,
						F2(
							function (x, y) {
								return A2(_elm_lang$core$Basics_ops['++'], x, y);
							}),
						{ctor: '[]'},
						A2(
							_elm_lang$core$List$map,
							function (experience) {
								return {
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$paragraph,
										_user$project$MyCV$None,
										{
											ctor: '::',
											_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(3),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A3(
												_mdgriffith$style_elements$Element$el,
												_user$project$MyCV$CardSubheader,
												{ctor: '[]'},
												_mdgriffith$style_elements$Element$text(experience.position)),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A3(
											_mdgriffith$style_elements$Element$paragraph,
											_user$project$MyCV$None,
											{
												ctor: '::',
												_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(3),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A3(
													_mdgriffith$style_elements$Element$el,
													_user$project$MyCV$CardText,
													{ctor: '[]'},
													_mdgriffith$style_elements$Element$text(experience.location)),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A3(
												_mdgriffith$style_elements$Element$paragraph,
												_user$project$MyCV$None,
												{
													ctor: '::',
													_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(3),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A3(
														_mdgriffith$style_elements$Element$el,
														_user$project$MyCV$CardText,
														{ctor: '[]'},
														_mdgriffith$style_elements$Element$text(experience.dates)),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A3(
													_mdgriffith$style_elements$Element$paragraph,
													_user$project$MyCV$None,
													{
														ctor: '::',
														_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(20),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A3(
															_mdgriffith$style_elements$Element$el,
															_user$project$MyCV$CardText,
															{ctor: '[]'},
															_mdgriffith$style_elements$Element$text(experience.description)),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}
									}
								};
							},
							experience))),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$MyCV$viewPublications = function (publications) {
	return A3(
		_mdgriffith$style_elements$Element$column,
		_user$project$MyCV$Card,
		{
			ctor: '::',
			_0: _mdgriffith$style_elements$Element_Attributes$spacing(10),
			_1: {
				ctor: '::',
				_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
				_1: {
					ctor: '::',
					_0: _mdgriffith$style_elements$Element_Attributes$alignLeft,
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$width(_mdgriffith$style_elements$Element_Attributes$fill),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$height(_mdgriffith$style_elements$Element_Attributes$fill),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		},
		{
			ctor: '::',
			_0: A3(
				_mdgriffith$style_elements$Element$paragraph,
				_user$project$MyCV$CardHeader,
				{
					ctor: '::',
					_0: _mdgriffith$style_elements$Element_Attributes$spacing(10),
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$width(
								_mdgriffith$style_elements$Element_Attributes$percent(100)),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: A3(
						_mdgriffith$style_elements$Element$el,
						_user$project$MyCV$None,
						{ctor: '[]'},
						_mdgriffith$style_elements$Element$text('Publications')),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A3(
					_mdgriffith$style_elements$Element$column,
					_user$project$MyCV$None,
					{
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$width(
							_mdgriffith$style_elements$Element_Attributes$percent(100)),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
							_1: {ctor: '[]'}
						}
					},
					A3(
						_elm_lang$core$List$foldr,
						F2(
							function (x, y) {
								return A2(_elm_lang$core$Basics_ops['++'], x, y);
							}),
						{ctor: '[]'},
						A2(
							_elm_lang$core$List$map,
							function (publications) {
								return {
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$paragraph,
										_user$project$MyCV$None,
										{
											ctor: '::',
											_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(3),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A3(
												_mdgriffith$style_elements$Element$el,
												_user$project$MyCV$CardSubheader,
												{ctor: '[]'},
												_mdgriffith$style_elements$Element$text(publications.title)),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A3(
											_mdgriffith$style_elements$Element$paragraph,
											_user$project$MyCV$None,
											{
												ctor: '::',
												_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(3),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A3(
													_mdgriffith$style_elements$Element$el,
													_user$project$MyCV$CardText,
													{ctor: '[]'},
													_mdgriffith$style_elements$Element$text(publications.authors)),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A3(
												_mdgriffith$style_elements$Element$paragraph,
												_user$project$MyCV$None,
												{
													ctor: '::',
													_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(10),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A3(
														_mdgriffith$style_elements$Element$el,
														_user$project$MyCV$CardText,
														{ctor: '[]'},
														_mdgriffith$style_elements$Element$text(publications.citation)),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}
								};
							},
							publications))),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$MyCV$viewInterests = function (interests) {
	return A3(
		_mdgriffith$style_elements$Element$column,
		_user$project$MyCV$Card,
		{
			ctor: '::',
			_0: _mdgriffith$style_elements$Element_Attributes$spacing(10),
			_1: {
				ctor: '::',
				_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
				_1: {
					ctor: '::',
					_0: _mdgriffith$style_elements$Element_Attributes$alignLeft,
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$width(_mdgriffith$style_elements$Element_Attributes$fill),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$height(_mdgriffith$style_elements$Element_Attributes$fill),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		},
		{
			ctor: '::',
			_0: A3(
				_mdgriffith$style_elements$Element$paragraph,
				_user$project$MyCV$CardHeader,
				{
					ctor: '::',
					_0: _mdgriffith$style_elements$Element_Attributes$spacing(10),
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$width(
								_mdgriffith$style_elements$Element_Attributes$percent(100)),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: A3(
						_mdgriffith$style_elements$Element$el,
						_user$project$MyCV$None,
						{ctor: '[]'},
						_mdgriffith$style_elements$Element$text('Other Interests')),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A3(
					_mdgriffith$style_elements$Element$column,
					_user$project$MyCV$None,
					{
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$width(
							_mdgriffith$style_elements$Element_Attributes$percent(100)),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
							_1: {ctor: '[]'}
						}
					},
					A3(
						_elm_lang$core$List$foldr,
						F2(
							function (x, y) {
								return A2(_elm_lang$core$Basics_ops['++'], x, y);
							}),
						{ctor: '[]'},
						A2(
							_elm_lang$core$List$map,
							function (interest) {
								return {
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$paragraph,
										_user$project$MyCV$None,
										{
											ctor: '::',
											_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(5),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A3(
												_mdgriffith$style_elements$Element$el,
												_user$project$MyCV$CardText,
												{ctor: '[]'},
												_mdgriffith$style_elements$Element$text(interest)),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								};
							},
							interests))),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$MyCV$viewCerts = function (certifications) {
	return A3(
		_mdgriffith$style_elements$Element$column,
		_user$project$MyCV$Card,
		{
			ctor: '::',
			_0: _mdgriffith$style_elements$Element_Attributes$spacing(10),
			_1: {
				ctor: '::',
				_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
				_1: {
					ctor: '::',
					_0: _mdgriffith$style_elements$Element_Attributes$alignLeft,
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$width(_mdgriffith$style_elements$Element_Attributes$fill),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$height(_mdgriffith$style_elements$Element_Attributes$fill),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		},
		{
			ctor: '::',
			_0: A3(
				_mdgriffith$style_elements$Element$paragraph,
				_user$project$MyCV$CardHeader,
				{
					ctor: '::',
					_0: _mdgriffith$style_elements$Element_Attributes$spacing(10),
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$width(
								_mdgriffith$style_elements$Element_Attributes$percent(100)),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: A3(
						_mdgriffith$style_elements$Element$el,
						_user$project$MyCV$None,
						{ctor: '[]'},
						_mdgriffith$style_elements$Element$text('Certifications')),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A3(
					_mdgriffith$style_elements$Element$column,
					_user$project$MyCV$None,
					{
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$width(
							_mdgriffith$style_elements$Element_Attributes$percent(100)),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$padding(10),
							_1: {ctor: '[]'}
						}
					},
					A3(
						_elm_lang$core$List$foldr,
						F2(
							function (x, y) {
								return A2(_elm_lang$core$Basics_ops['++'], x, y);
							}),
						{ctor: '[]'},
						A2(
							_elm_lang$core$List$map,
							function (certifications) {
								return {
									ctor: '::',
									_0: A3(
										_mdgriffith$style_elements$Element$paragraph,
										_user$project$MyCV$None,
										{
											ctor: '::',
											_0: _mdgriffith$style_elements$Element_Attributes$paddingBottom(5),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A3(
												_mdgriffith$style_elements$Element$el,
												_user$project$MyCV$CardText,
												{ctor: '[]'},
												_mdgriffith$style_elements$Element$text(certifications)),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								};
							},
							certifications))),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$MyCV$HeaderText = {ctor: 'HeaderText'};
var _user$project$MyCV$Header = {ctor: 'Header'};
var _user$project$MyCV$Black = {ctor: 'Black'};
var _user$project$MyCV$White = {ctor: 'White'};
var _user$project$MyCV$SecondaryText = {ctor: 'SecondaryText'};
var _user$project$MyCV$PrimaryText = {ctor: 'PrimaryText'};
var _user$project$MyCV$LightSecondary = {ctor: 'LightSecondary'};
var _user$project$MyCV$Secondary = {ctor: 'Secondary'};
var _user$project$MyCV$DarkSecondary = {ctor: 'DarkSecondary'};
var _user$project$MyCV$LightPrimary = {ctor: 'LightPrimary'};
var _user$project$MyCV$Primary = {ctor: 'Primary'};
var _user$project$MyCV$DarkPrimary = {ctor: 'DarkPrimary'};
var _user$project$MyCV$Fallback = {ctor: 'Fallback'};
var _user$project$MyCV$SecondarySerif = {ctor: 'SecondarySerif'};
var _user$project$MyCV$PrimarySerif = {ctor: 'PrimarySerif'};
var _user$project$MyCV$SecondarySans = {ctor: 'SecondarySans'};
var _user$project$MyCV$PrimarySans = {ctor: 'PrimarySans'};
var _user$project$MyCV$Headline = {ctor: 'Headline'};
var _user$project$MyCV$stylesheet = _mdgriffith$style_elements$Style$styleSheet(
	{
		ctor: '::',
		_0: A2(
			_mdgriffith$style_elements$Style$style,
			_user$project$MyCV$Background,
			{
				ctor: '::',
				_0: _mdgriffith$style_elements$Style_Color$background(
					A3(_elm_lang$core$Color$rgb, 159, 180, 190)),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_mdgriffith$style_elements$Style$style,
				_user$project$MyCV$HeaderText,
				{
					ctor: '::',
					_0: _mdgriffith$style_elements$Style_Color$text(
						_user$project$MyCV$colorpalette(_user$project$MyCV$LightPrimary)),
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Style_Font$size(36),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Style_Font$typeface(
								{
									ctor: '::',
									_0: _user$project$MyCV$fontStack(_user$project$MyCV$Headline),
									_1: {
										ctor: '::',
										_0: _user$project$MyCV$fontStack(_user$project$MyCV$Fallback),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_mdgriffith$style_elements$Style$style,
					_user$project$MyCV$Header,
					{
						ctor: '::',
						_0: _mdgriffith$style_elements$Style_Color$background(
							_user$project$MyCV$colorpalette(_user$project$MyCV$DarkPrimary)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_mdgriffith$style_elements$Style$style,
						_user$project$MyCV$Card,
						{
							ctor: '::',
							_0: _mdgriffith$style_elements$Style_Color$background(
								_user$project$MyCV$colorpalette(_user$project$MyCV$LightPrimary)),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_mdgriffith$style_elements$Style$style,
							_user$project$MyCV$CardHeader,
							{
								ctor: '::',
								_0: _mdgriffith$style_elements$Style_Color$background(
									_user$project$MyCV$colorpalette(_user$project$MyCV$DarkPrimary)),
								_1: {
									ctor: '::',
									_0: _mdgriffith$style_elements$Style_Color$text(
										_user$project$MyCV$colorpalette(_user$project$MyCV$LightPrimary)),
									_1: {
										ctor: '::',
										_0: _mdgriffith$style_elements$Style_Font$size(28),
										_1: {
											ctor: '::',
											_0: _mdgriffith$style_elements$Style_Font$typeface(
												{
													ctor: '::',
													_0: _user$project$MyCV$fontStack(_user$project$MyCV$Headline),
													_1: {
														ctor: '::',
														_0: _user$project$MyCV$fontStack(_user$project$MyCV$Fallback),
														_1: {ctor: '[]'}
													}
												}),
											_1: {ctor: '[]'}
										}
									}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_mdgriffith$style_elements$Style$style,
								_user$project$MyCV$CardSubheader,
								{
									ctor: '::',
									_0: _mdgriffith$style_elements$Style_Color$text(
										_user$project$MyCV$colorpalette(_user$project$MyCV$DarkPrimary)),
									_1: {
										ctor: '::',
										_0: _mdgriffith$style_elements$Style_Font$size(22),
										_1: {
											ctor: '::',
											_0: _mdgriffith$style_elements$Style_Font$typeface(
												{
													ctor: '::',
													_0: _user$project$MyCV$fontStack(_user$project$MyCV$PrimarySans),
													_1: {
														ctor: '::',
														_0: _user$project$MyCV$fontStack(_user$project$MyCV$Fallback),
														_1: {ctor: '[]'}
													}
												}),
											_1: {ctor: '[]'}
										}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_mdgriffith$style_elements$Style$style,
									_user$project$MyCV$CardText,
									{
										ctor: '::',
										_0: _mdgriffith$style_elements$Style_Color$text(
											_user$project$MyCV$colorpalette(_user$project$MyCV$DarkPrimary)),
										_1: {
											ctor: '::',
											_0: _mdgriffith$style_elements$Style_Font$size(18),
											_1: {
												ctor: '::',
												_0: _mdgriffith$style_elements$Style_Font$typeface(
													{
														ctor: '::',
														_0: _user$project$MyCV$fontStack(_user$project$MyCV$SecondarySans),
														_1: {
															ctor: '::',
															_0: _user$project$MyCV$fontStack(_user$project$MyCV$PrimarySans),
															_1: {
																ctor: '::',
																_0: _user$project$MyCV$fontStack(_user$project$MyCV$Fallback),
																_1: {ctor: '[]'}
															}
														}
													}),
												_1: {ctor: '[]'}
											}
										}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		}
	});
var _user$project$MyCV$view = function (model) {
	return A2(
		_mdgriffith$style_elements$Element$viewport,
		_user$project$MyCV$stylesheet,
		A2(
			_mdgriffith$style_elements$Element$below,
			{
				ctor: '::',
				_0: A3(
					_mdgriffith$style_elements$Element$wrappedRow,
					_user$project$MyCV$None,
					{
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$spacing(15),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$padding(15),
							_1: {
								ctor: '::',
								_0: _mdgriffith$style_elements$Element_Attributes$width(
									_mdgriffith$style_elements$Element_Attributes$percent(100)),
								_1: {
									ctor: '::',
									_0: _mdgriffith$style_elements$Element_Attributes$height(_mdgriffith$style_elements$Element_Attributes$content),
									_1: {ctor: '[]'}
								}
							}
						}
					},
					{
						ctor: '::',
						_0: A3(_user$project$MyCV$cvCard, 'Experience', _user$project$MyCV$CVExperience, model),
						_1: {
							ctor: '::',
							_0: A3(_user$project$MyCV$cvCard, 'Training', _user$project$MyCV$CVTraining, model),
							_1: {
								ctor: '::',
								_0: A3(_user$project$MyCV$cvCard, 'Education', _user$project$MyCV$CVEducation, model),
								_1: {
									ctor: '::',
									_0: A3(_user$project$MyCV$cvCard, 'Publications', _user$project$MyCV$CVPublications, model),
									_1: {
										ctor: '::',
										_0: A3(
											_mdgriffith$style_elements$Element$wrappedRow,
											_user$project$MyCV$None,
											{
												ctor: '::',
												_0: _mdgriffith$style_elements$Element_Attributes$spacing(15),
												_1: {
													ctor: '::',
													_0: _mdgriffith$style_elements$Element_Attributes$width(_mdgriffith$style_elements$Element_Attributes$fill),
													_1: {ctor: '[]'}
												}
											},
											{
												ctor: '::',
												_0: A3(_user$project$MyCV$cvCard, 'Other Interests', _user$project$MyCV$CVInterests, model),
												_1: {
													ctor: '::',
													_0: A3(_user$project$MyCV$cvCard, 'Certifications', _user$project$MyCV$CVCerts, model),
													_1: {ctor: '[]'}
												}
											}),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}),
				_1: {ctor: '[]'}
			},
			A3(
				_mdgriffith$style_elements$Element$row,
				_user$project$MyCV$Header,
				{
					ctor: '::',
					_0: _mdgriffith$style_elements$Element_Attributes$spacing(15),
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Element_Attributes$padding(15),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$center,
							_1: {
								ctor: '::',
								_0: _mdgriffith$style_elements$Element_Attributes$width(
									_mdgriffith$style_elements$Element_Attributes$percent(100)),
								_1: {
									ctor: '::',
									_0: _mdgriffith$style_elements$Element_Attributes$height(
										_mdgriffith$style_elements$Element_Attributes$px(72)),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				},
				{
					ctor: '::',
					_0: A3(
						_mdgriffith$style_elements$Element$el,
						_user$project$MyCV$HeaderText,
						{
							ctor: '::',
							_0: _mdgriffith$style_elements$Element_Attributes$verticalCenter,
							_1: {ctor: '[]'}
						},
						_mdgriffith$style_elements$Element$text(model.name)),
					_1: {ctor: '[]'}
				})));
};
var _user$project$MyCV$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$MyCV$initialModel, update: _user$project$MyCV$update, view: _user$project$MyCV$view})();
